sudo: required
services:
  - docker
env:
  global:
    - SHA=$(git rev-parse HEAD) # Get the SHA of the current version to be used to uniquely tag the docker images
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1 # Disable prompts related to GC
before_install:
  - openssl aes-256-cbc -K $encrypted_9f3b5599b056_key -iv $encrypted_9f3b5599b056_iv -in service-account.json.enc -out service-account.json -d # Command which will unencrypt the encrypted travis credential json on Travis CI
  - curl https://sdk.cloud.google.com | bash > /dev/null; # Download Google Cloud Sdk and install it inside /dev/null locally inside travis ci
  - source # Look at the default install directory of GC SDK and source a file path.bash.inc (some configs that going to modify our shell inside travis ci and apply this additional config to the source command)
  - gcloud components update kubectl # Install kubectl command line tool to apply config files and use imperative command
  - gcloud auth activate-service-account --key-file service-account.json # Login to GC by using the service account which uses the credential inside the service-account
  - gcloud config set project multi-k8s-305221 # Tell GC what project we want to work on
  - gcloud config set compute/zone australia-southeast1-a # Tell GC where is our K8s cluster
  - gcloud container clusters get-credentials multi-cluster # Tell GC what clusters are we working with
  - echo "$DOCKER_PASSWORD | docker login -u "$DOCKER_USERNAME" --password-stdin # Login into Docker
  - docker build -t bobbyvann/react-test -f ./client/Dockerfile.dev ./client # Build the test version of multi-client

script:
  - docker run -e CI=true bobbyvann/react-test npm test -- --coverage # Run the test

deploy:
  provider: script # Script file in order to deploy our image
  script: bash ./deploy.sh # Series of command inside deploy.sh to execute
  on:
    branch: master # Only deploy if commits are being pushed to master
